### NSM Opcodes ###

--- Register opcodes
LDB B A 	-- Load byte A to register B
LDI B A 	-- Load int A to register B
LDUI B A	-- Load uint A to register B
LDF B A 	-- Load float A to register B
MV B A  -- Copy value from register A to B

--- Stack opcodes
PUSHB X		-- Push byte X onto stack
PUSHI X		-- Push int X onto stack
PUSHUI X	-- Push uint X onto stack
PUSHF X		-- Push float X onto stack
PUSHR X		-- Push register X onto stack
POPB X		-- Pop byte from stack to register X
POPI X		-- Pop int from stack to register X
POPUI X		-- Pop uint from stack to register X
POPF X		-- Pop float from stack to register X

--- RAM opcodes
READB X		-- Read byte from ram at address of register DA to register X
READI X		-- Read int from ram at address of register DA to register X
READF X 	-- Read float from ram at address of register DA to register X
WRITB X		-- Write byte from register X to ram at address of register DA
WRITI X 	-- Write int from register X to ram at address of register DA
WRITI X 	-- Write float from register X to ram at address of register DA
LODS		-- Load string to stack from ram at address of register DA
POPS		-- Write string to ram from stack at address of register DA

--- Math opcodes results are stored in result register
ADD A B		-- Add A and B
SUB A B		-- Subtract B from A
MUL A B 	-- Multiply A and B
DIV A B 	-- Divide A by B
MOD A B 	-- A modulo B
POW A B 	-- A to the power of B
SQRT A		-- Square root of A

--- Jumping opcodes
JMP X		-- Jump to address X
CALL X		-- Call address X
JMPR		-- Jump to address of register DA
CALLR		-- Call address of register DA

--- Allocation opcodes
MALLOC		-- Allocate memory of size AX store address in DA register
FREE		-- Free memory at address DA of size AX

--- Paging opcodes
ALLOC_PT	-- Allocate new page table store address in DA
ALLOC_PAGE	-- Allocate new page, store address in DA